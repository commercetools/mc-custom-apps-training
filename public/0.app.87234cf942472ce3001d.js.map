{"version":3,"sources":["webpack:///./node_modules/moment/locale sync [/\\\\](de(\\.js)","webpack:///./src/constants.js","webpack:///./src/load-messages.js","webpack:///./src/components/entry-point/entry-point.js","webpack:///./src/index.js"],"names":["map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","webpackContextKeys","Object","resolve","module","exports","PERMISSIONS","ManageProducts","ViewProducts","FEATURE_FLAGS","loadMessages","lang","loadAppI18nPromise","then","result","default","error","console","warn","AsyncApplicationRoutes","React","lazy","setupGlobalErrorListener","EntryPoint","environment","window","app","onRegisterErrorListeners","dispatch","Sdk","Get","errorHandler","handleActionError","applicationMessages","DEV_ONLY__loadNavbarMenuConfig","data","featureFlags","displayName","ReactDOM","render","document","getElementById"],"mappings":"2LAAA,IAAIA,EAAM,CACT,OAAQ,qCACR,UAAW,qCACX,OAAQ,qCACR,UAAW,qCACX,OAAQ,qCACR,UAAW,qCACX,OAAQ,qCACR,UAAW,qCACX,UAAW,wCACX,aAAc,yCAIf,SAASC,eAAeC,GACvB,IAAIC,EAAKC,sBAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,sBAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,eAAeS,KAAO,SAASC,qBAC9B,OAAOC,OAAOF,KAAKV,IAEpBC,eAAeY,QAAUT,sBACzBU,EAAOC,QAAUd,eACjBA,eAAeE,GAAK,mH,kDC/BpB,oEAAO,IAAMa,EAAc,CACzBC,eAAgB,iBAChBC,aAAc,gBAGHC,EAAgB,I,gfC4BdC,EAjCM,SAAfA,aAAgBC,GACpB,IAAIC,EACJ,OAAQD,GACN,IAAK,KACHC,EAAqB,wDAGrB,MACF,IAAK,KACHA,EAAqB,wDAGrB,MACF,QACEA,EAAqB,wDAKzB,OAAOA,EAAmBC,MACxB,SAACC,GAAD,OAAYA,EAAOC,WACnB,SAACC,GAOC,OALAC,QAAQC,KAAR,kEAC6DP,GAC3DK,GAGK,O,uECfPG,EAAyBC,IAAMC,MACnC,kBAAM,uEAKRC,cAEA,IAAMC,EAAa,SAAbA,aAAa,OACjB,YAAC,IAAD,CACEC,YAAaC,OAAOC,IACpBC,yBAA0B,qCAAkB,IAAfC,EAAe,EAAfA,SAC3BC,IAAIC,IAAIC,aAAe,SAACf,GAAD,OACrBgB,YAAkBhB,EAAO,MAAzBgB,CAAgCJ,KAEpCK,oBAAqBvB,EACrBwB,+BAAgC,iDAC9B,6CAA6BrB,MAAK,SAACsB,GAAD,OAAUA,EAAKpB,SAAWoB,MAE9DC,aAAc3B,KAEd,YAACU,EAAD,QAGJI,EAAWc,YAAc,aAEVd,QCnCfe,IAASC,OAAO,YAAC,EAAD,MAAgBC,SAASC,eAAe,S","file":"0.app.87234cf942472ce3001d.js","sourcesContent":["var map = {\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive [/\\\\\\\\](de(\\\\.js)?|es(\\\\.js)?|fr(\\\\.js)?|zh-cn(\\\\.js)?|ja(\\\\.js)?)$\";","export const PERMISSIONS = {\n  ManageProducts: 'ManageProducts',\n  ViewProducts: 'ViewProducts',\n};\n\nexport const FEATURE_FLAGS = {};\n","const loadMessages = (lang) => {\n  let loadAppI18nPromise;\n  switch (lang) {\n    case 'de':\n      loadAppI18nPromise = import(\n        './i18n/data/de.json' /* webpackChunkName: \"app-i18n-de\" */\n      );\n      break;\n    case 'es':\n      loadAppI18nPromise = import(\n        './i18n/data/es.json' /* webpackChunkName: \"app-i18n-es\" */\n      );\n      break;\n    default:\n      loadAppI18nPromise = import(\n        './i18n/data/en.json' /* webpackChunkName: \"app-i18n-en\" */\n      );\n  }\n\n  return loadAppI18nPromise.then(\n    (result) => result.default,\n    (error) => {\n      // eslint-disable-next-line no-console\n      console.warn(\n        `Something went wrong while loading the app messages for ${lang}`,\n        error\n      );\n\n      return {};\n    }\n  );\n};\n\nexport default loadMessages;\n","import React from 'react';\nimport {\n  ApplicationShell,\n  setupGlobalErrorListener,\n} from '@commercetools-frontend/application-shell';\nimport { Sdk } from '@commercetools-frontend/sdk';\nimport { handleActionError } from '@commercetools-frontend/actions-global';\nimport { FEATURE_FLAGS } from '../../constants';\nimport loadMessages from '../../load-messages';\n\n// Here we split up the main (app) bundle with the actual application business logic.\n// Splitting by route is usually recommended and you can potentially have a splitting\n// point for each route. More info at https://reactjs.org/docs/code-splitting.html\nconst AsyncApplicationRoutes = React.lazy(\n  () => import('../../routes' /* webpackChunkName: \"starter-routes\" */)\n);\n\n// Ensure to setup the global error listener before any React component renders\n// in order to catch possible errors on rendering/mounting.\nsetupGlobalErrorListener();\n\nconst EntryPoint = () => (\n  <ApplicationShell\n    environment={window.app}\n    onRegisterErrorListeners={({ dispatch }) => {\n      Sdk.Get.errorHandler = (error) =>\n        handleActionError(error, 'sdk')(dispatch);\n    }}\n    applicationMessages={loadMessages}\n    DEV_ONLY__loadNavbarMenuConfig={() =>\n      import('../../../menu.json').then((data) => data.default || data)\n    }\n    featureFlags={FEATURE_FLAGS}\n  >\n    <AsyncApplicationRoutes />\n  </ApplicationShell>\n);\nEntryPoint.displayName = 'EntryPoint';\n\nexport default EntryPoint;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport EntryPoint from './components/entry-point';\n\nReactDOM.render(<EntryPoint />, document.getElementById('app'));\n"],"sourceRoot":""}