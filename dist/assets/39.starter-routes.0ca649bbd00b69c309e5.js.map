{"version":3,"sources":["webpack:///./src/components/GraphqlCalls/queries.graphql","webpack:///./src/components/RestCalls/messages.js","webpack:///./src/components/RestCalls/RestCalls.js","webpack:///./src/components/RestCalls/actions.js","webpack:///./src/components/GraphqlCalls/messages.js","webpack:///./src/components/GraphqlCalls/GraphqlCalls.js","webpack:///./src/components/homepage/messages.js","webpack:///./src/components/homepage/homepage.js","webpack:///./src/components/ExternalServer/ExternalServer.js","webpack:///./src/components/main-view/messages.js","webpack:///./src/components/main-view/main-view.mod.css","webpack:///./src/components/main-view/main-view.js","webpack:///./src/routes.js"],"names":["doc","loc","source","collectFragmentReferences","node","refs","kind","add","name","value","type","selectionSet","selections","forEach","selection","variableDefinitions","def","definitions","definitionRefs","findOperation","i","length","element","extractReferences","Set","module","exports","oneQuery","operationName","newDoc","hasOwnProperty","opRefs","allRefs","newRefs","refName","size","prevRefs","has","childRef","op","push","defineMessages","title","id","description","defaultMessage","initialState","isLoading","data","error","reducer","state","action","payload","columns","key","label","RestCalls","asyncDispatch","useAsyncDispatch","showApiErrorNotification","useShowApiErrorNotification","useReducer","dispatch","useState","isClosed","setIsClosed","modalContent","setModalContent","useEffect","fetchZones","sdkActions","get","mcApiProxyTarget","MC_API_PROXY_TARGETS","COMMERCETOOLS_PLATFORM","service","actions","then","result","catch","errors","message","isOpen","onClose","subtitle","Body","topBarCurrentPathLabel","topBarPreviousPathLabel","rows","results","onRowClick","row","displayName","target","GRAPHQL_TARGETS","GraphqlCalls","useQuery","FetchTaxes","variables","context","loading","theme","Headline","as","taxCategory","Homepage","props","useIntl","intlMessage","messages","ExternalServer","setType","setMessage","from","setFrom","Stack","scale","alignItems","onClick","handleClick","forwardTo","uri","RestCallsLabelLink","GraphqlCallsLabelLink","homepageLabelLink","ExternalServerLabelLink","MainView","intl","Inset","className","styles","Inline","Link","to","match","url","icon","formatMessage","path","component","PageUnauthorized","imageSrc","LockedDiamondSVG","paragraph1","ApplicationRoutes","useRouteMatch","useIsAuthorized","demandedPermissions","PERMISSIONS","ViewProducts","render","routerProps"],"mappings":"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","file":"39.starter-routes.0ca649bbd00b69c309e5.js","sourcesContent":["\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"OperationDefinition\",\"operation\":\"query\",\"name\":{\"kind\":\"Name\",\"value\":\"FetchTaxes\"},\"variableDefinitions\":[{\"kind\":\"VariableDefinition\",\"variable\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"taxCategory\"},\"arguments\":[{\"kind\":\"Argument\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"value\":{\"kind\":\"Variable\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"}}}],\"directives\":[],\"selectionSet\":{\"kind\":\"SelectionSet\",\"selections\":[{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"key\"},\"arguments\":[],\"directives\":[]},{\"kind\":\"Field\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"directives\":[]}]}}]}}],\"loc\":{\"start\":0,\"end\":89}};\n    doc.loc.source = {\"body\":\"\\nquery FetchTaxes($id: String!) {\\n  taxCategory(id: $id) {\\n    id\\n    key\\n    name\\n  }\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n    // Collect any fragment/type references from a node, adding them to the refs Set\n    function collectFragmentReferences(node, refs) {\n      if (node.kind === \"FragmentSpread\") {\n        refs.add(node.name.value);\n      } else if (node.kind === \"VariableDefinition\") {\n        var type = node.type;\n        if (type.kind === \"NamedType\") {\n          refs.add(type.name.value);\n        }\n      }\n\n      if (node.selectionSet) {\n        node.selectionSet.selections.forEach(function(selection) {\n          collectFragmentReferences(selection, refs);\n        });\n      }\n\n      if (node.variableDefinitions) {\n        node.variableDefinitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n\n      if (node.definitions) {\n        node.definitions.forEach(function(def) {\n          collectFragmentReferences(def, refs);\n        });\n      }\n    }\n\n    var definitionRefs = {};\n    (function extractReferences() {\n      doc.definitions.forEach(function(def) {\n        if (def.name) {\n          var refs = new Set();\n          collectFragmentReferences(def, refs);\n          definitionRefs[def.name.value] = refs;\n        }\n      });\n    })();\n\n    function findOperation(doc, name) {\n      for (var i = 0; i < doc.definitions.length; i++) {\n        var element = doc.definitions[i];\n        if (element.name && element.name.value == name) {\n          return element;\n        }\n      }\n    }\n\n    function oneQuery(doc, operationName) {\n      // Copy the DocumentNode, but clear out the definitions\n      var newDoc = {\n        kind: doc.kind,\n        definitions: [findOperation(doc, operationName)]\n      };\n      if (doc.hasOwnProperty(\"loc\")) {\n        newDoc.loc = doc.loc;\n      }\n\n      // Now, for the operation we're running, find any fragments referenced by\n      // it or the fragments it references\n      var opRefs = definitionRefs[operationName] || new Set();\n      var allRefs = new Set();\n      var newRefs = new Set();\n\n      // IE 11 doesn't support \"new Set(iterable)\", so we add the members of opRefs to newRefs one by one\n      opRefs.forEach(function(refName) {\n        newRefs.add(refName);\n      });\n\n      while (newRefs.size > 0) {\n        var prevRefs = newRefs;\n        newRefs = new Set();\n\n        prevRefs.forEach(function(refName) {\n          if (!allRefs.has(refName)) {\n            allRefs.add(refName);\n            var childRefs = definitionRefs[refName] || new Set();\n            childRefs.forEach(function(childRef) {\n              newRefs.add(childRef);\n            });\n          }\n        });\n      }\n\n      allRefs.forEach(function(refName) {\n        var op = findOperation(doc, refName);\n        if (op) {\n          newDoc.definitions.push(op);\n        }\n      });\n\n      return newDoc;\n    }\n\n    module.exports = doc;\n    \n        module.exports[\"FetchTaxes\"] = oneQuery(doc, \"FetchTaxes\");\n        \n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'RestCalls.title',\n    description: 'The page title of RestCalls',\n    defaultMessage: 'RestCalls',\n  },\n});\n","import React, { useReducer, useEffect, useState } from \"react\";\nimport Text from \"@commercetools-uikit/text\";\nimport messages from \"./messages\";\nimport * as actions from \"./actions\";\nimport { useAsyncDispatch } from \"@commercetools-frontend/sdk\";\nimport { useShowApiErrorNotification } from \"@commercetools-frontend/actions-global\";\nimport DataTableManager from \"@commercetools-uikit/data-table-manager\";\nimport DataTable from \"@commercetools-uikit/data-table\";\nimport { InfoModalPage } from \"@commercetools-frontend/application-components\";\n\nconst initialState = {\n  isLoading: true,\n  data: null,\n  error: null,\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ok\":\n      return { isLoading: false, data: action.payload, error: null };\n    case \"error\":\n      return { isLoading: false, data: null, error: action.payload };\n    default:\n      return state;\n  }\n};\n\nconst columns = [\n  { key: \"name\", label: \"Name\" },\n  { key: \"key\", label: \"Key\" },\n];\n\nconst RestCalls = () => {\n  // The asyncDispatch is a wrapper around the redux dispatch and provides\n  // the correct return type definitions because the action resolves to a Promise.\n  const asyncDispatch = useAsyncDispatch();\n  const showApiErrorNotification = useShowApiErrorNotification();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [isClosed, setIsClosed] = useState(false);\n  const [modalContent, setModalContent] = useState({});\n\n  useEffect(() => {\n    asyncDispatch(actions.fetchZones())\n      .then((result) => {\n        dispatch({ type: \"ok\", payload: result });\n      })\n      .catch((error) => {\n        dispatch({ type: \"error\", payload: error });\n        showApiErrorNotification({ errors: error });\n      });\n  }, []);\n\n  if (state.isLoading) return \"Loading...\";\n  if (state.error) return `Error! ${state.error.message}`;\n  return (\n    <div>\n      <InfoModalPage\n        title=\"Lorem ipsum\"\n        isOpen={isClosed}\n        onClose={() => setIsClosed(false)}\n        subtitle={<Text.Body>{\"Lorem ipsum ...\"}</Text.Body>}\n        topBarCurrentPathLabel=\"Lorem ipsum\"\n        topBarPreviousPathLabel=\"Back\"\n      >\n        <Text.Body>{modalContent.name}</Text.Body>\n      </InfoModalPage>\n      <DataTableManager columns={columns}>\n        <DataTable\n          rows={state.data.results}\n          onRowClick={(row) => {\n            setModalContent(row);\n            setIsClosed(true);\n          }}\n        />\n      </DataTableManager>\n    </div>\n  );\n};\nRestCalls.displayName = \"RestCalls\";\n\nexport default RestCalls;\n","import { actions as sdkActions } from '@commercetools-frontend/sdk';\nimport { MC_API_PROXY_TARGETS } from '@commercetools-frontend/constants';\n\nexport const fetchZones = () => \n    sdkActions.get({\n        mcApiProxyTarget:MC_API_PROXY_TARGETS.COMMERCETOOLS_PLATFORM,\n        service:'zones'\n    })\n\nexport const fetchTaxById = id => \n    sdkActions.get({\n        mcApiProxyTarget:MC_API_PROXY_TARGETS.COMMERCETOOLS_PLATFORM,\n        service:'taxCategories',\n        options:{ id }\n    })","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'GraphqlCalls.title',\n    description: 'The page title of GraphqlCalls',\n    defaultMessage: 'GraphqlCalls',\n  },\n});\n","import React from 'react';\nimport Text from '@commercetools-uikit/text';\nimport messages from './messages';\nimport { GRAPHQL_TARGETS } from '@commercetools-frontend/constants';\nimport { FetchTaxes } from './queries.graphql';\nimport { useQuery } from '@apollo/client/react';\nimport Card from '@commercetools-uikit/card';\n\n\n\nconst target = GRAPHQL_TARGETS.COMMERCETOOLS_PLATFORM;\nconst taxId=\"931d8106-8661-4b5e-a062-c046248349d2\";\n\nconst GraphqlCalls = () => {\n    const { loading, error, data } = useQuery(FetchTaxes,{\n        variables: {\n            id:taxId\n        },\n        context:{ target }\n    });\n     \n        if (loading) return 'Loading...';\n        if (error) return `---Error! ${error.message}`;\n        return (\n            <Card theme=\"dark\" type=\"raised\">\n            <Text.Headline as=\"h1\">{`Tax: ${data.taxCategory.name}`}</Text.Headline>\n            <Text.Headline as=\"h5\">{`Tax Key: ${data.taxCategory.key}`}</Text.Headline>\n            <Text.Headline as=\"h5\">{`Tax ID: ${data.taxCategory.id}`}</Text.Headline>\n          </Card>\n        )\n    \n    \n};\nGraphqlCalls.displayName = 'GraphqlCalls';\n\nexport default GraphqlCalls;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'Homepage.title',\n    description: 'The page title of main view',\n    defaultMessage: 'Homepage',\n  },\n});\n","import React from \"react\";\nimport { useIntl } from 'react-intl';\nimport messages from './messages';\nimport Text from '@commercetools-uikit/text';\n\n\n\nconst Homepage = (props) =>{\n  const intl = useIntl();\n  return (\n    <Text.Headline as=\"h1\" intlMessage={messages.title} />  \n    );\n};\nHomepage.displayName = 'Homepage';\n\nexport default Homepage;\n","import React, { useReducer, useEffect, useState } from \"react\";\nimport Text from \"@commercetools-uikit/text\";\nimport { actions, useAsyncDispatch } from \"@commercetools-frontend/sdk\";\nimport { useShowApiErrorNotification } from \"@commercetools-frontend/actions-global\";\nimport PrimaryButton from \"@commercetools-uikit/primary-button\";\nimport { ContentNotification, Spacings } from \"@commercetools-frontend/ui-kit\";\n\nconst externalApiUrl = \"https://external-server.now.sh/sayhi\";\nconst initialState = {\n  isLoading: false,\n  data: null,\n  error: null,\n};\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case \"ok\":\n      return { isLoading: false, data: action.payload, error: null };\n    case \"error\":\n      return { isLoading: false, data: null, error: action.payload };\n    default:\n      return state;\n  }\n};\nconst ExternalServer = () => {\n  // The asyncDispatch is a wrapper around the redux dispatch and provides\n  // the correct return type definitions because the action resolves to a Promise.\n  const asyncDispatch = useAsyncDispatch();\n  const showApiErrorNotification = useShowApiErrorNotification();\n  const [state, dispatch] = useReducer(reducer, initialState);\n  const [type, setType] = useState(\"info\");\n  const [message, setMessage] = useState(\n    \"Click on the button above to send a call to the External Server\"\n  );\n  const [from, setFrom] = useState(\"\");\n  \n\n  const handleClick = () =>{\n    asyncDispatch(actions.forwardTo.get({ uri: externalApiUrl }))\n      .then((result) => {\n        setType(\"success\")\n        setMessage(result.message)\n        setFrom(result.from)\n        dispatch({ type: \"ok\", payload: result });\n      })\n      .catch((error) => {\n        dispatch({ type: \"error\", payload: error });\n        showApiErrorNotification({ errors: error });\n      });\n  }\n \n  if (state.isLoading) return \"Loading...\";\n  if (state.error) return (\n    <ContentNotification type=\"error\">\n        {\" \"}\n        {`Message: ${state.error.message}`}{\" \"}\n      </ContentNotification>\n  );\n  \n  return (\n    <Spacings.Stack scale=\"l\" alignItems=\"flex-start\">\n      <Text.Headline as=\"h3\">External fetch example</Text.Headline>\n\n      <PrimaryButton\n        label=\"Call to External Server\"\n        onClick={handleClick}\n      />\n\n      <ContentNotification type={type}>\n        {\" \"}\n        {`Message: ${message} ${from}`}{\" \"}\n      </ContentNotification>\n    </Spacings.Stack>\n  );\n};\n\nexport default ExternalServer;\n","import { defineMessages } from 'react-intl';\n\nexport default defineMessages({\n  title: {\n    id: 'MainView.title',\n    description: 'The page title of main view',\n    defaultMessage: 'Hello, world',\n  },\n  RestCallsLabelLink: {\n    id: 'MainView.RestCalls',\n    description: 'The label for the link to RestCalls',\n    defaultMessage: 'RestCalls',\n  },\n  GraphqlCallsLabelLink: {\n    id: 'MainView.GraphqlCalls',\n    description: 'The label for the link to GraphqlCalls',\n    defaultMessage: 'GraphqlCalls',\n  },\n  homepageLabelLink: {\n    id: 'MainView.homepageLabelLink',\n    description: 'The label for the link to homepage',\n    defaultMessage: 'Homepage',\n  },\n  ExternalServerLabelLink: {\n    id: 'MainView.ExternalServerLabelLink',\n    description: 'The label for the link to External Server',\n    defaultMessage: 'External Server',\n  },\n});\n","// extracted by mini-css-extract-plugin\nexport default {\"nav-header\":\"main-view-mod__nav-header___xvUKh\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { useIntl } from 'react-intl';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport { ListIcon, TableIcon,RocketIcon } from '@commercetools-uikit/icons';\nimport Text from '@commercetools-uikit/text';\nimport Spacings from '@commercetools-uikit/spacings';\nimport FlatButton from '@commercetools-uikit/flat-button';\nimport RestCalls from '../RestCalls';\nimport GraphqlCalls from '../GraphqlCalls';\nimport Homepage from '../homepage';\nimport ExternalServer from '../ExternalServer';\nimport messages from './messages';\nimport styles from './main-view.mod.css';\n\nconst MainView = (props) => {\n  const intl = useIntl();\n\n  return (\n    <Spacings.Inset scale=\"m\">\n      <Spacings.Stack scale=\"m\">\n        <Text.Headline as=\"h1\" intlMessage={messages.title} />\n        <div className={styles['nav-header']}>\n          <Spacings.Inline scale=\"s\">\n          <FlatButton\n              as={Link}\n              to={`${props.match.url}/homepage`}\n              icon={<TableIcon />}\n              label={intl.formatMessage(messages.homepageLabelLink)}\n            />\n            <FlatButton\n              as={Link}\n              to={`${props.match.url}/RestCalls`}\n              icon={<ListIcon />}\n              label={intl.formatMessage(messages.RestCallsLabelLink)}\n            />\n            <FlatButton\n              as={Link}\n              to={`${props.match.url}/GraphqlCalls`}\n              icon={<TableIcon />}\n              label={intl.formatMessage(messages.GraphqlCallsLabelLink)}\n            />\n             <FlatButton\n              as={Link}\n              to={`${props.match.url}/ExternalServer`}\n              icon={<RocketIcon />}\n              label={intl.formatMessage(messages.ExternalServerLabelLink)}\n            />\n          </Spacings.Inline>\n        </div>\n        <Switch>\n          <Route path={`${props.match.path}/RestCalls`} component={RestCalls} />\n          <Route path={`${props.match.path}/GraphqlCalls`} component={GraphqlCalls} />\n          <Route path={`${props.match.path}/homepage`} component={Homepage} />\n          <Route path={`${props.match.path}/ExternalServer`} component={ExternalServer} />\n        </Switch>\n      </Spacings.Stack>\n    </Spacings.Inset>\n  );\n};\nMainView.displayName = 'MainView';\nMainView.propTypes = {\n  match: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    url: PropTypes.string.isRequired,\n    params: PropTypes.shape({\n      projectKey: PropTypes.string.isRequired,\n    }).isRequired,\n  }).isRequired,\n};\n\nexport default MainView;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch, useRouteMatch } from 'react-router-dom';\nimport { useIsAuthorized } from '@commercetools-frontend/permissions';\nimport LockedDiamondSVG from '@commercetools-frontend/assets/images/locked-diamond.svg';\nimport { MaintenancePageLayout } from '@commercetools-frontend/application-components';\nimport MainView from './components/main-view';\nimport { PERMISSIONS } from './constants';\n\nconst PageUnauthorized = () => (\n  <MaintenancePageLayout\n    imageSrc={LockedDiamondSVG}\n    title=\"Not enough permissions to access this resource\"\n    paragraph1=\"We recommend to contact your project administrators for further questions.\"\n  />\n);\n\nconst ApplicationRoutes = () => {\n  const match = useRouteMatch();\n  const canViewProducts = useIsAuthorized({\n    demandedPermissions: [PERMISSIONS.ViewProducts],\n  });\n  if (!canViewProducts) {\n    return <PageUnauthorized />;\n  }\n  return (\n    <Switch>\n      <Route\n        path={`${match.path}/some-other-route`}\n        render={() => <div>{'Nothing to see'}</div>}\n      />\n      <Route render={(routerProps) => <MainView match={routerProps.match} />} />\n    </Switch>\n  );\n};\nApplicationRoutes.displayName = 'ApplicationRoutes';\n\nexport default ApplicationRoutes;\n"],"sourceRoot":""}